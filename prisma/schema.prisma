generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  role     Role     @default(USER)

  bookingsVilla        BookingVilla[]
  bookingsTransportasi BookingTransportasiLaut[]
  donations            Donasi[]
  purchases            Pembelian[]
}

model Villa {
  id            String         @id @default(uuid())
  nama          String
  deskripsi     String
  hargaPerMalam Float
  gambar        String
  ketersediaan  Int
  bookingsVilla BookingVilla[]
}

model TransportasiLaut {
  id                   String                    @id @default(uuid())
  nama                 String
  deskripsi            String
  harga                Float
  gambar               String
  ketersediaan         Int
  bookingsTransportasi BookingTransportasiLaut[]
}

model Paket {
  id            String @id @default(uuid())
  namaPaket     String
  asalKomunitas String
  nomorTelepon  String
  gambarPaket   String
}

model Merchandise {
  id           String      @id @default(uuid())
  nama         String
  deskripsi    String
  harga        Float
  gambar       String
  ketersediaan Int
  purchases    Pembelian[]
}

model BookingVilla {
  id              String   @id @default(uuid())
  userId          String
  villaId         String
  tanggalCheckin  DateTime
  tanggalCheckout DateTime
  jumlahOrang     Int
  totalHarga      Float
  bukti           String
  user            User     @relation(fields: [userId], references: [id])
  villa           Villa    @relation(fields: [villaId], references: [id])
}

model BookingTransportasiLaut {
  id               String           @id @default(uuid())
  userId           String
  transportasiId   String
  tanggalCheckin   DateTime
  jumlahPenumpang  Int
  totalHarga       Float
  user             User             @relation(fields: [userId], references: [id])
  transportasiLaut TransportasiLaut @relation(fields: [transportasiId], references: [id])
}

model TerumbuKarang {
  id        String   @id @default(uuid())
  nama      String
  deskripsi String
  gambar    String
  Donasi    Donasi[]
}

model Donasi {
  id              String        @id @default(uuid())
  userId          String
  terumbuKarangId String
  jumlahDonasi    String
  tanggalDonasi   String
  buktiPembayaran String
  nomortelepon    String
  gambar          String       
  user            User          @relation(fields: [userId], references: [id])
  terumbuKarang   TerumbuKarang @relation(fields: [terumbuKarangId], references: [id])
}

model Pembelian {
  id               String      @id @default(uuid())
  userId           String
  merchandiseId    String
  jumlahBarang     Int
  totalHarga       Float
  tanggalPembelian DateTime
  user             User        @relation(fields: [userId], references: [id])
  merchandise      Merchandise @relation(fields: [merchandiseId], references: [id])
}

model Volunteer {
  id             String @id @default(uuid())
  namaOrganisasi String
  asal           String
  email          String
  noTelepon      String
  surat          String
}

model Galery {
  id        String   @id @default(uuid())
  title     String
  deskripsi String
  gambar    String
  tanggal   DateTime
}

enum Role {
  USER
  ADMIN
}